<snippet>
  <content><![CDATA[
  replace: >
    dest=${1: # ! The file to modify.}
    replace=${2: #  The string to replace regexp matches. May contain backreferences that will get expanded with the regexp capture groups if the regexp matches. If not set, matches are removed entirely.}
    others=${3: #  All arguments accepted by the M(file) module also work here.}
    regexp=${4: # ! The regular expression to look for in the contents of the file. Uses Python regular expressions; see U(http://docs.python.org/2/library/re.html). Uses multiline mode, which means C(^) and C($) match the beginning and end respectively of I(each line) of the file.}
    validate=${5:None #  validation to run before copying into place}
    backup=${6:no #  Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.}
  ]]></content>
  <tabTrigger>an-replace</tabTrigger>
  <scope>source.yaml</scope>
</snippet>
