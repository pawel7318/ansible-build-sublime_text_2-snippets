<snippet>
  <content><![CDATA[
  rax_files_objects: >
    src=${1:None #  Source from which to upload files.  Used to specify a remote object as a source for an operation, i.e. a file name, "file1", or a comma-separated list of remote objects, "file1,file2,file17".  src and dest are mutually exclusive on remote-only object operations}
    container=${2:None # ! The container to use for file object operations.}
    dest=${3: #  The destination of a "get" operation; i.e. a local directory, "/home/user/myfolder". Used to specify the destination of an operation on a remote object; i.e. a file name, "file1", or a comma-separated list of remote objects, "file1,file2,file17"}
    expires=${4:None #  Used to set an expiration on a file or folder uploaded to Cloud Files. Requires an integer, specifying expiration in seconds}
    state=${5:present #  Indicate desired state of the resource}
    clear_meta=${6:no #  Optionally clear existing metadata when applying metadata to existing objects. Selecting this option is only appropriate when setting type=meta}
    meta=${7:None #  A hash of items to set as metadata values on an uploaded file or folder}
    type=${8:file #  Type of object to do work on}
    method=${9:get #  The method of operation to be performed.  For example, put to upload files to Cloud Files, get to download files from Cloud Files or delete to delete remote objects in Cloud Files}
    structure=${10:yes #  Used to specify whether to maintain nested directory structure when downloading objects from Cloud Files.  Setting to false downloads the contents of a container to a single, flat directory}
  ]]></content>
  <tabTrigger>an-rax_files_objects</tabTrigger>
  <scope>source.yaml</scope>
</snippet>
