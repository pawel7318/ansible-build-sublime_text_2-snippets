<snippet>
  <content><![CDATA[
  authorized_key: >
    key_options=${1:None #  A string of ssh key options to be prepended to the key in the authorized_keys file}
    state=${2:present #  Whether the given key (with the given key_options) should or should not be in the file}
    user=${3:None # ! The username on the remote host whose authorized_keys file will be modified}
    key=${4:None # ! The SSH public key, as a string}
    path=${5:(homedir)+/.ssh/authorized_keys #  Alternate path to the authorized_keys file}
    manage_dir=${6:yes #  Whether this module should manage the directory of the authorized key file.  If set, the module will create the directory, as well as set the owner and permissions of an existing directory. Be sure to set C(manage_dir=no) if you are using an alternate directory for authorized_keys, as set with C(path), since you could lock yourself out of SSH access. See the example below.}
  ]]></content>
  <tabTrigger>an-authorized_key</tabTrigger>
  <scope>source.yaml</scope>
</snippet>
