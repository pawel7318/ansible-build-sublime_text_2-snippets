<snippet>
  <content><![CDATA[
  copy: >
    src=${1:None #  Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to Rsync.}
    directory_mode=${2: #  When doing a recursive copy set the mode for the directories. If this is not set we will default the system defaults.}
    force=${3:yes #  the default is C(yes), which will replace the remote file when contents are different than the source.  If C(no), the file will only be transferred if the destination does not exist.}
    dest=${4:None # ! Remote absolute path where the file should be copied to. If src is a directory, this must be a directory too.}
    content=${5:None #  When used instead of 'src', sets the contents of a file directly to the specified value.}
    validate=${6: #  The validation command to run before copying into place.  The path to the file to validate is passed in via '%s' which must be present as in the visudo example below. The command is passed securely so shell features like expansion and pipes won't work.}
    backup=${7:no #  Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.}
  ]]></content>
  <tabTrigger>an-copy</tabTrigger>
  <scope>source.yaml</scope>
</snippet>
